---
slug: api/read_message
method: post
---
{%liquid 
  assign autor_id = context.params.msgDetails.autor_id

  function conversationDet = 'modules/chat/lib/queries/conversations/find_conversation_id', autor_id: autor_id

  for rp in conversationDet.conversations[0].participant_ids
    if rp != autor_id
      assign recipient_id = rp
    endif
  endfor

  assign recipient_user_id = conversationDet.participants[0].user_id
%}

{% parse_json conversation_object %}
{
    "conversation_id":      {{ conversationDet.conversation_id | json }},
    "slug":    {{ 'inbox' | json }},  
    "format": {{ 'html' | json }}
}
{% endparse_json %}

{%liquid 
  function recipient_profile = 'lib/current_organization_profile', user_id: recipient_user_id

  function current_conversation = 'modules/chat/lib/commands/conversations/find_or_create', object: conversation_object, current_profile: recipient_profile

  if current_conversation
    function res = 'modules/chat/lib/commands/conversations/mark_read', conversation: current_conversation, participant_id: recipient_id
  endif
%}

{%comment%}
{%liquid 
  assign context.params.msgDetails.autor_id = 22168

  function conversationsID = 'modules/chat/lib/queries/conversations/find_conversation_id', autor_id: context.params.msgDetails.autor_id
%}
{%endcomment%}


    {%comment%}
    {% parse_json object %}
    {
        "to":      {{ 'sen.gairik86@gmail.com' | json }},
        "from":    {% print 'app.support_email' | t | json %},    
        "subject": {{ 'This is a test email' | json }},
        "recipient_first_name":     {{ context.params.msgDetails.autor_id | json }},
        "recipient_last_name":     {{ context.params.msgDetails.message | json }},
        "sender_first_name":     {{ conversation_object.msgDetails.sender_first_name | json }},
        "sender_last_name":     {{ conversation_object.msgDetails.sender_last_name | json }},
        "host": {{ context.location.host | json }}
    }
    {% endparse_json %}


    {% liquid
        function object = 'lib/commands/emails/send', template: 'orders/delivered_buyer', object: object
    %}
    {%endcomment%}

{%comment%}
{% liquid
  function current_profile = 'lib/current_profile', user_id: context.current_user.id
  include 'lib/profile_present_or_not_authenticated', profile: current_profile

  function inactivePdf = 'lib/queries/pdf/findInActivePdf', page_category: context.params.pdfDetails.page_category, item_category: context.params.pdfDetails.item_category, user_id: context.current_user.id, current_profile: current_profile
  for iPdf in inactivePdf
    function delete_pdf_obj = 'lib/commands/profiles/delete_pdf', pdf_id: iPdf.id, user_id: context.current_user.id 
  endfor

  function object = 'lib/commands/pdf/create', object: context.params.pdfDetails, current_profile: current_profile
  

  include 'theme/json/shared/show', object: object
%}
{%endcomment%}

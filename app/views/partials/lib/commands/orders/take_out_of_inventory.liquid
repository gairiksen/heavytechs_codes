{% liquid
  assign c = '{ "errors": {}, "valid": true }' | parse_json

  for line in object.line_items
    assign input = '{}' | parse_json
    hash_assign input['id'] = line.item.item_inventory.id
    hash_assign input['step'] = line.quantity

    function result = 'lib/commands/call', command: 'item_inventories/decrement_quantity', object: input, selection: 'record_update'

    if result['valid']
      if result.quantity < 1
        function status = 'lib/commands/statuses/create', object_id: result.id, name: 'app.statuses.items.unavailable', profile_id: result.owner.id
        if status['valid']
          include 'lib/commands/events/create', type: 'status_created', actor_id: result.owner.id, object_id: status.id, target_id: status.object_id
        else
          log status, type: 'ERROR: take_out_of_inventory status failed'
        endif
      endif
    else
      hash_assign c['errors'] = result['errors']
      hash_assign c['valid']  = false
    endif
  endfor

  return c
%}

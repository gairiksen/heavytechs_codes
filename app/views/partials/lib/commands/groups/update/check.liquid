{% liquid
  assign c = '{ "errors": {}, "valid": true }' | parse_json

  function c = 'lib/validations/presence', c: c, object: object, field_name: 'id'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'group_type'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'name'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'summary'

  if object.description == blank
    include 'lib/register_error', contract: c, field_name: 'description', key: 'app.errors.blank'
  else
    if object.description.size < 30
      assign msg = 'app.groups.errors.description_too_short' | t: size: 30
      include 'lib/register_error', contract: c, field_name: 'description', message: msg
    endif
  endif

  hash_assign object['valid'] = c.valid
  hash_assign object['errors'] = c.errors

  return object
%}

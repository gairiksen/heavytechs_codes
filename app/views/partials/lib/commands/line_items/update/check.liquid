{% liquid
  assign c = '{ "errors": {}, "valid": true }' | parse_json
  function item = 'lib/queries/items/find', id: line_item.item_id

  function c = 'lib/validations/presence', c: c, object: object, field_name: 'id'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'quantity'

  function order = 'lib/queries/orders/find', id: line_item.order_id

  if order.status.name != 'app.statuses.orders.placed'
    assign msg = 'app.orders.line-items.errors.wrong-order-status' | t: status: order.status.name
    include 'lib/register_error', contract: c, field_name: 'order_status', message: msg
  endif

  if item.id != item.item_inventory.item_id
    include 'lib/register_error', contract: c, field_name: 'item', key: 'app.orders.line-items.errors.item-outdated'
  endif
  if item.item_inventory.status.name != 'app.statuses.items.published'
    include 'lib/register_error', contract: c, field_name: 'item', key: 'app.orders.line-items.errors.item-not-published'
  endif

  if item.item_inventory.quantity == null or item.item_inventory.quantity <= 0
    include 'lib/register_error', contract: c, field_name: 'quantity', key: 'app.orders.line-items.errors.quantity-no-items'
  else
    assign max_quantity = item.item_inventory.quantity | at_most: item.item_inventory.max_in_one_order
    function c = 'lib/validations/number', c: c, object: object, field_name: 'quantity', less_than_or_equal: max_quantity, message_less_than_or_equal: 'app.orders.line-items.errors.quantity-too-big'
  endif
  function c = 'lib/validations/number', c: c, object: object, field_name: 'quantity', greater_than: 0

  function c = 'lib/validations/presence', c: c, object: object, field_name: 'total_price_cents'

  function max_order_value = 'lib/queries/constants/find' name: "MAX_ORDER_VALUE", type: "integer"
  function c = 'lib/validations/number', c: c, object: order, field_name: 'total_price_cents', less_than_or_equal: max_order_value, message_less_than_or_equal: 'app.orders.errors.max_price'

  hash_assign object['valid'] = c.valid
  hash_assign object['errors'] = c.errors

  return object
%}

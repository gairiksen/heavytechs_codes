query search(
  $id: ID
  $limit: Int = 20
  $name: String
  $owner_id: String
  $relation_name: String
  $with_owner: Boolean = false
) {
  groups: records(
    per_page: $limit
    filter: {
      id: { value: $id }
      table: { value: "group" }
      properties: [{ name: "name", value: $name }]
      related_records: {
        join: { join_on_property: "id", foreign_property: "r_id" }
        filter: {
          table: { value: "relationship" }
          properties: [
            { name: "l_id", value: $owner_id }
            { name: "name", value: $relation_name }
          ]
        }
      }
    }
    sort: [{ created_at: { order: DESC } }]
  ) {
    total_entries
    results {
      id
      created_at
      type: table

      uuid: property(name: "uuid")
      name: property(name: "name")
      summary: property(name: "summary")
      description: property(name: "description")
      content_type: property(name: "content_type")
      group_type: property(name: "group_type")
      ask_to_join: property(name: "ask_to_join")
      meta_visible: property(name: "meta_visible")
      content_visible: property(name: "content_visible")
      approve_request: property(name: "approve_request")
      post_content: property(name: "post_content")
      invite_member: property(name: "invite_member")

      main_photo: related_record(table: "photo", join_on_property: "uuid", foreign_property: "object_uuid") {
        photo: property_upload(name: "photo") {
          url
          versions
        }
      }
      owner: related_record(
        table: "relationship"
        join_on_property: "id"
        foreign_property: "r_id"
        filter: { properties: { value: "owner", name: "name" } }
      ) @include(if: $with_owner) {
        id
        properties
        profile: related_record(table: "profile", join_on_property: "l_id") {
          id
          username: property(name: "username")
          first_name: property(name: "first_name")
          last_name: property(name: "last_name")
          slug: property(name: "slug")
          avatar: related_record(
            table: "photo"
            join_on_property: "uuid"
            foreign_property: "object_uuid"
            filter: { properties: { name: "photo_type", value: "avatar" } }
          ) {
            photo: property_upload(name: "photo") {
              url
              versions
            }
          }
        }
      }
    }
  }
}

query search(
  $limit: Int = 20
  $ids: [ID!]
) {
  records(
    per_page: $limit
    filter: {
      deleted_at: { exists: false }
      id: { value_in: $ids }
    }
    sort: [{ created_at: { order: DESC } }]
  ) {
    total_entries
    results {
      id
      created_at
      type: table
      uuid: property(name: "uuid")

      # post
      group_id: property(name: "group_id")
      upvote_profile_ids: property_array(name: "upvote_profile_ids")
      comments: related_records(table: "comment", join_on_property: "uuid", foreign_property: "commentable_uuid") {
        ...comment
      }
    }
  }
}

fragment profile on Record {
  id
  name: property(name: "name")
  first_name: property(name: "first_name")
  last_name: property(name: "last_name")
  slug: property(name: "slug")
  avatar: related_record(
    table: "photo"
    join_on_property: "uuid"
    foreign_property: "object_uuid"
    filter: { properties: { name: "photo_type", value: "avatar" } }
  ) {
    photo: property_upload(name: "photo") {
      url
      versions
    }
  }
}
fragment comment on Record {
  id
  created_at
  body: property(name: "body")
  creator: related_record(table: "profile", join_on_property: "creator_id"){
    ...profile
  }
}

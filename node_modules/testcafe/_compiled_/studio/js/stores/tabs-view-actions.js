'use strict';

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default').default;

exports.__esModule = true;

var _ACTION$showItemView$ACTION$closeTab;

var _actionsAction = require('../actions/action');

var _actionsAction2 = _interopRequireDefault(_actionsAction);

var _ipc = require('ipc');

var _ipc2 = _interopRequireDefault(_ipc);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

function getViewIndexById(views, id) {
    var foundIndex = -1;

    views.some(function (view, index) {
        var isFound = view.id === id;

        if (isFound) foundIndex = index;

        return isFound;
    });

    return foundIndex;
}

exports.default = (_ACTION$showItemView$ACTION$closeTab = {}, _ACTION$showItemView$ACTION$closeTab[_actionsAction2.default.showItemView] = function (store, action) {
    var showNode = null;

    if (!action.node.name) {
        var nodeRelativePath = action.node.id.substring(store.vfs.basePath.length + 1);

        showNode = store.vfs.fsTree.getItem(nodeRelativePath);
    } else showNode = action.node;

    store.activeView = store._prepareToSend(showNode);

    if (getViewIndexById(store.views, store.activeView.id) === -1) store.views.push(store.activeView);

    store.emitTabsViewChange();
}, _ACTION$showItemView$ACTION$closeTab[_actionsAction2.default.closeTab] = function (store, action) {
    store.views.splice(getViewIndexById(store.views, action.node.id), 1);

    if (store.activeView.id === action.node.id) store.activeView = store.views[store.views.length - 1];

    store.emitTabsViewChange();
}, _ACTION$showItemView$ACTION$closeTab);
module.exports = exports.default;
'use strict';

var _inherits = require('babel-runtime/helpers/inherits').default;

var _classCallCheck = require('babel-runtime/helpers/class-call-check').default;

exports.__esModule = true;

var SplitView = (function (_React$Component) {
    function SplitView() {
        _classCallCheck(this, SplitView);

        _React$Component.call(this);
        this.state = {
            isResize: false,
            mouseX: 0,
            elmWidth: 0
        };
    }

    _inherits(SplitView, _React$Component);

    SplitView.prototype.setPosition = function setPosition(x) {
        var widthDiff = x - this.state.mouseX;
        var leftPane = React.findDOMNode(this.refs['left-pane']);
        var rightPane = React.findDOMNode(this.refs['right-pane']);
        var newWidth = leftPane.offsetWidth + widthDiff;

        newWidth = newWidth > 0 ? newWidth : 0;

        this.state.mouseX = x;

        leftPane.style.width = newWidth + 'px';
        rightPane.style.marginLeft = newWidth + this.state.elmWidth + 'px';
    };

    SplitView.prototype._cursorInWindowBounds = function _cursorInWindowBounds(e) {
        return e.clientX >= 0 && e.clientX <= window.innerWidth - this.state.elmWidth;
    };

    SplitView.prototype.componentDidMount = function componentDidMount() {
        var _this = this;

        var separator = React.findDOMNode(this.refs.separator);

        this.setState({ elmWidth: separator.offsetWidth });

        separator.addEventListener('mousedown', function (e) {
            _this.setState({ isResize: true, mouseX: e.pageX });
        });

        window.addEventListener('mouseup', function () {
            _this.setState({ isResize: false });
        });

        window.addEventListener('mousemove', function (e) {
            if (_this.state.isResize && _this._cursorInWindowBounds(e)) _this.setPosition(e.pageX);
        });
    };

    SplitView.prototype.render = function render() {
        var children = this.props.children;

        return React.createElement(
            'div',
            { className: 'tc-split-view' },
            React.createElement(
                'div',
                { className: 'left-pane', ref: 'left-pane' },
                children[0]
            ),
            React.createElement(
                'div',
                { ref: 'separator', className: 'separator' },
                React.createElement('div', { className: 'split-icon' })
            ),
            React.createElement(
                'div',
                { className: 'right-pane', ref: 'right-pane' },
                children[1]
            )
        );
    };

    return SplitView;
})(React.Component);

exports.default = SplitView;
module.exports = exports.default;
'use strict';

var _inherits = require('babel-runtime/helpers/inherits').default;

var _classCallCheck = require('babel-runtime/helpers/class-call-check').default;

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default').default;

exports.__esModule = true;

var _stepView = require('../step-view');

var _stepView2 = _interopRequireDefault(_stepView);

var SKIP_TEST_NAME = '-INIT TEST CASE-';

var TestView = (function (_React$Component) {
    function TestView() {
        _classCallCheck(this, TestView);

        _React$Component.call(this);

        this.state = {
            expandedId: null
        };
    }

    _inherits(TestView, _React$Component);

    TestView.prototype.render = function render() {
        var steps = this.props.test.stepData.names.map(this._createStep.bind(this));

        return React.createElement(
            'ul',
            { className: 'tc-test-view' },
            steps
        );
    };

    TestView.prototype._toggleExpand = function _toggleExpand(id) {
        this.setState({
            expandedId: id === this.state.expandedId ? null : id
        });
    };

    TestView.prototype._createStep = function _createStep(name, index, array) {
        var offset = array[0] === SKIP_TEST_NAME ? 0 : 1;

        var step = {
            name: name,
            index: index + offset
        };

        //NOTE: we skip service "init test case" step for data driven tests
        return name === SKIP_TEST_NAME ? '' : React.createElement(_stepView2.default, { key: name, step: step, toggleExpand: this._toggleExpand.bind(this),
            isExpanded: this.state.expandedId === name });
    };

    return TestView;
})(React.Component);

exports.default = TestView;
module.exports = exports.default;
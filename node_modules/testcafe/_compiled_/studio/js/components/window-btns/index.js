"use strict";

var _inherits = require("babel-runtime/helpers/inherits").default;

var _classCallCheck = require("babel-runtime/helpers/class-call-check").default;

var _interopRequireDefault = require("babel-runtime/helpers/interop-require-default").default;

exports.__esModule = true;

var _remote = require("remote");

var _remote2 = _interopRequireDefault(_remote);

var WindowBtns = (function (_React$Component) {
    function WindowBtns() {
        _classCallCheck(this, WindowBtns);

        _React$Component.call(this);
    }

    _inherits(WindowBtns, _React$Component);

    WindowBtns.prototype.render = function render() {
        var maximizeBtnClass = this._getMaximizeBtnClass(_remote2.default.getCurrentWindow().isMaximized());

        return React.createElement(
            "div",
            { className: "tc-window-btns" },
            React.createElement(
                "button",
                { className: "minimize", onClick: this.minimize.bind(this) },
                React.createElement("span", null)
            ),
            React.createElement(
                "button",
                { ref: "maximize", className: maximizeBtnClass, onClick: this.maximize.bind(this) },
                React.createElement("span", null)
            ),
            React.createElement(
                "button",
                { className: "close", onClick: this.close },
                React.createElement("span", null)
            )
        );
    };

    WindowBtns.prototype.minimize = function minimize() {
        _remote2.default.getCurrentWindow().minimize();
    };

    WindowBtns.prototype.maximize = function maximize() {
        var currentWindow = _remote2.default.getCurrentWindow();
        var wasMaximized = currentWindow.isMaximized();

        if (wasMaximized) currentWindow.unmaximize();else currentWindow.maximize();

        React.findDOMNode(this.refs.maximize).className = this._getMaximizeBtnClass(!wasMaximized);
    };

    WindowBtns.prototype.close = function close() {
        _remote2.default.getCurrentWindow().close();
    };

    WindowBtns.prototype._getMaximizeBtnClass = function _getMaximizeBtnClass(isMaximized) {
        return isMaximized ? "unmaximize" : "maximize";
    };

    return WindowBtns;
})(React.Component);

exports.default = WindowBtns;
module.exports = exports.default;